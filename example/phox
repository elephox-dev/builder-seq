#!/usr/bin/env php
<?php
declare(strict_types=1);

require_once '../vendor/autoload.php';
const APP_ROOT = __DIR__;

require_once APP_ROOT . '/src/Routes/WebController.php';
require_once APP_ROOT . '/src/Commands/EchoCommand.php';

use App\Commands\EchoCommand;
use App\Routes\WebController;
use Elephox\Builder\Seq\AddsSeq;
use Elephox\Console\ConsoleApplicationBuilder;
use Elephox\DI\Contract\ServiceCollection;
use Elephox\Support\Contract\ExceptionHandler;
use Elephox\Web\Routing\Contract\Router;
use Elephox\Web\Routing\RequestRouter;

// Create the custom builder
class ConsoleBuilder extends ConsoleApplicationBuilder {
	use AddsSeq;
}

// Build console application
$builder = ConsoleBuilder::create();
$builder->addLogging();
$builder->addSeq();

// Load app commands
$builder->commands->loadFromClass(EchoCommand::class);

// Add the request router, so we can use it in commands
$builder->services->addSingleton(Router::class, RequestRouter::class, function (ServiceCollection $services): RequestRouter {
	return (new RequestRouter($services))->loadFromClass(WebController::class);
});

// Load commands
$builder->commands->loadFromNamespace("Elephox\\Web\\Commands");

$app = $builder->build();
try {
	$app->run();
} catch (Throwable $e) {
	$app->services->get(ExceptionHandler::class)->handleException($e);
}
